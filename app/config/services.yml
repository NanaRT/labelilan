# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value

services:
#    service_name:
#        class: AppBundle\Directory\ClassName
#        arguments: ["@another_service_name", "plain_value", "%parameter_name%"]

    searchCategoryService:
        class: AppBundle\Services\SearchCategory
        arguments: [ "@doctrine.orm.entity_manager","@service_container"  ]
        
    app.registration_complet:
        class: AppBundle\Services\RegistrationConfirmListener
        arguments: [ "@router", "@service_container", "@doctrine.orm.entity_manager" ]
        tags:
            - { name: kernel.event_subscriber }
    inserting_file: #sets files
        class: AppBundle\Services\InsertingFile
        arguments: [ "@service_container" ] 
    create_folder_filespath:
        class: AppBundle\Services\CreateFolderFilespath
        arguments: [  "@service_container" ]
        
    application_listener: #update order status if item status are same
        class: AppBundle\Listener\ApplicationListener
        arguments: [ "@service_container","@router" ] # We use container directly in order to avoid a CircularReferenceException
        tags:
            - { name: doctrine.event_listener, event: postPersist }
            - { name: doctrine.event_listener, event: postUpdate }

    app.form.registration:
        class: AppBundle\Form\RegistrationType
        tags:
            - { name: form.type, alias: app_user_registration }